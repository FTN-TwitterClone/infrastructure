version: '2.1'

services: 
  consul:
    image: consul
    container_name: consul
    command: "agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0"
    volumes:
      - ./volumes/consul/data:/consul/data
    networks:
      - network
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    volumes:
      - ./volumes/mongo:/data/db
    networks:
      - network
  cassandra:
    image: cassandra:4.0
    container_name: cassandra
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./volumes/cassandra:/var/lib/cassandra
    networks:
      - network
  neo4j:
    image: neo4j:4.4-community
    container_name: neo4j
    environment:
      - NEO4J_AUTH=neo4j/sifra
    volumes:
      - ./volumes/neo4j/conf:/conf
      - ./volumes/neo4j/data:/data
      - ./volumes/neo4j/import:/import
      - ./volumes/neo4j/logs:/logs
      - ./volumes/neo4j/plugins:/plugins
  api_gateway:
    build:
      context: ./api_gateway/
      dockerfile: Dockerfile
    container_name: api_gateway
    restart: on-failure
    depends_on:
      - auth
      - tweet
      - ads
      - social-graph
      - profile
    ports:
      - "8000:8000"
    volumes:
      - ./cert:/etc/nginx/cert
      - ./api_gateway/api_gateway.conf:/etc/nginx/conf.d/api_gateway.conf
    networks:
      - network
  auth:
    build: ../auth
    container_name: auth
    restart: always
    depends_on:
      - consul
      - jaeger
    environment:
      - DB=consul
      - DBPORT=8500
      - SMTP_HOST=smtp.uns.ac.rs
      - SMTP_PORT=587
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - CAPTCHA_SECRET_KEY=6LcJfBwjAAAAAFm6TFuyeyokTO1LrdIdBavtOnXj
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
      - SECRET_KEY=c8cd5f4392ca571f5e9610c9e27ccab4857b1b39267e6deb54ebb0962be0509cb0234d75cfff63f6d70723d670644c60e32e86dac39574e413a1fc2f8383bf75
      - CERT=/cert.pem
      - KEY=/key.pem
      - CA_CERT=/ca-cert.pem
    volumes:
      - ./cert/auth/cert.pem:/cert.pem
      - ./cert/auth/key.pem:/key.pem
      - ./cert/twitter_ca/ca-cert.pem:/ca-cert.pem
    networks:
      - network
  profile:
    build: ../profile
    container_name: profile
    restart: always
    depends_on:
      - jaeger
      - mongo
    environment:
      - DB=mongo
      - DBPORT=27017
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
      - SECRET_KEY=c8cd5f4392ca571f5e9610c9e27ccab4857b1b39267e6deb54ebb0962be0509cb0234d75cfff63f6d70723d670644c60e32e86dac39574e413a1fc2f8383bf75
      - CERT=/cert.pem
      - KEY=/key.pem
      - CA_CERT=/ca-cert.pem
    volumes:
      - ./cert/profile/cert.pem:/cert.pem
      - ./cert/profile/key.pem:/key.pem
      - ./cert/twitter_ca/ca-cert.pem:/ca-cert.pem
    networks:
      - network
  tweet:
    build: ../tweet
    container_name: tweet
    restart: always
    depends_on:
      jaeger:
        condition: service_started
      cassandra:
        condition: service_healthy
    environment:
      - DB=cassandra
      - DBPORT=9042
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
      - SECRET_KEY=c8cd5f4392ca571f5e9610c9e27ccab4857b1b39267e6deb54ebb0962be0509cb0234d75cfff63f6d70723d670644c60e32e86dac39574e413a1fc2f8383bf75
      - CERT=/cert.pem
      - KEY=/key.pem
      - CA_CERT=/ca-cert.pem
    volumes:
      - ./cert/tweet/cert.pem:/cert.pem
      - ./cert/tweet/key.pem:/key.pem
      - ./cert/twitter_ca/ca-cert.pem:/ca-cert.pem
    networks:
      - network
  social-graph:
    build: ../social-graph
    container_name: social-graph
    restart: always
    depends_on:
      - jaeger
      - neo4j
    environment:
      - DB=neo4j
      - DBPORT=7687
      - DB_USER=neo4j
      - DB_PASS=sifra
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
      - SECRET_KEY=c8cd5f4392ca571f5e9610c9e27ccab4857b1b39267e6deb54ebb0962be0509cb0234d75cfff63f6d70723d670644c60e32e86dac39574e413a1fc2f8383bf75
      - CERT=/cert.pem
      - KEY=/key.pem
      - CA_CERT=/ca-cert.pem
    volumes:
      - ./cert/social-graph/cert.pem:/cert.pem
      - ./cert/social-graph/key.pem:/key.pem
      - ./cert/twitter_ca/ca-cert.pem:/ca-cert.pem
    networks:
      - network
  ads:
    build: ../ads
    container_name: ads
    restart: always
    depends_on:
      jaeger:
        condition: service_started
      cassandra:
        condition: service_healthy
    environment:
      - DB=cassandra
      - DBPORT=9042
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
      - SECRET_KEY=c8cd5f4392ca571f5e9610c9e27ccab4857b1b39267e6deb54ebb0962be0509cb0234d75cfff63f6d70723d670644c60e32e86dac39574e413a1fc2f8383bf75
      - CERT=/cert.pem
      - KEY=/key.pem
      - CA_CERT=/ca-cert.pem
    volumes:
      - ./cert/ads/cert.pem:/cert.pem
      - ./cert/ads/key.pem:/key.pem
      - ./cert/twitter_ca/ca-cert.pem:/ca-cert.pem
    networks:
      - network
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"
    networks:
      - network
  collector:
    image: otel/opentelemetry-collector:latest
    container_name: collector
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./api_gateway/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    networks:
      - network

networks:
  network:
    driver: bridge